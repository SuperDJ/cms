/**************************************
 * Navigation drawer
 *
 * https://material.google.com/patterns/navigation-drawer.html
 **************************************/

$drawer-padding: $gutter;
$drawer-item-height: rem-calc(48px);
$drawer-icon-size: rem-calc(24px);
$drawer-profile-img: rem-calc(40px);
$drawer-profile-top: $drawer-padding;
$drawer-profile-content-height: rem-calc(56px);
$drawer-profile-bottom-padding: rem-calc(8px);
$drawer-profile-scrim: to top, rgba($grey-900, 0.4) 15%, rgba($white, 0) 33%;
$drawer-profile-height: $drawer-padding + $drawer-profile-img + $drawer-profile-content-height + $drawer-profile-bottom-padding;

.sc-drawer {
	position: fixed;
	left: 0;
	top: 0;
	width: $drawer-small-width;
	height: 100%;
	background: $drawer-background;
	bottom: 0;
	overflow-x: hidden;
	max-width: calc(100% - #{rem-calc(56px)});

	&-permanent-full-height, &-permanent-clipped, &-permanent-floating, &-persistent, &-temporary {
		margin: 0 0 0 -102%;
		@include transition(margin $transition-small-duration $basic-transition);

		@media #{$small-up} {
			margin: 0;
		}

		@media #{$medium-only} {
			@include transition(margin $transition-medium-duration $basic-transition);
		}

		@media #{$medium-up} {
			@include transition(margin $transition-large-duration $basic-transition);
		}

		&.sc-expanded {
			margin: 0;
		}
	}

	header, .sc-drawer-header {
		position: relative;

		&:hover {
			background: none;
		}
	}

	&-permanent {
		@if( in-array( 'full-height', $navigation-drawer ) ) {
			&-full-height {
				top: 0;
				border-right: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));
				z-index: 3;

				.sc-drawer-header {
					padding: rem-calc(16px) rem-calc(16px) rem-calc(8px) rem-calc(16px);
					border-bottom: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));
					height: $appbar-mobile-portrait-height;

					@media only screen and (orientation: landscape) and (max-width: #{$small-screen}) {
						height: $appbar-mobile-landscape-height;
					}

					@media only screen and (orientation: portrait) and (max-width: #{$xsmall-screen}) {
						height: $appbar-mobile-portrait-height;
					}

					@media #{$small-up} {
						height: $appbar-large-height;
					}
				}
			}
		}

		@if( in-array( 'clipped', $navigation-drawer ) ) {
			&-clipped {
				top: $appbar-mobile-portrait-height;
				z-index: 1;
				border-right: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));

				@media only screen and (orientation: landscape) and (max-width: #{$small-screen}) {
					top: $appbar-mobile-landscape-height;
				}

				@media only screen and (orientation: portrait) and (max-width: #{$xsmall-screen}) {
					top: $appbar-mobile-portrait-height;
				}

				@media #{$small-up} {
					top: $appbar-large-height;
				}

				li:first-of-type {
					margin: $drawer-profile-bottom-padding 0 0 0;
				}
			}
		}

		@if( in-array( 'floating', $navigation-drawer ) ) {
			&-floating {
				top: $appbar-mobile-portrait-height;
				z-index: 1;

				@media only screen and (orientation: landscape) and (max-width: #{$small-screen}) {
					top: $appbar-mobile-landscape-height;
				}

				@media only screen and (orientation: portrait) and (max-width: #{$xsmall-screen}) {
					top: $appbar-mobile-portrait-height;
				}

				@media #{$small-up} {
					top: $appbar-large-height;
				}

				li:first-of-type {
					margin: $drawer-profile-bottom-padding 0 0 0;
				}
			}
		}
	}

	@if( in-array( 'persistent', $navigation-drawer ) ) {
		&-persistent {
			top: 0;
			border-right: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));
			z-index: 3;

			.sc-menu {
				top: $gutter;
			}

			header, .sc-drawer-header {
				height: $appbar-mobile-portrait-height;
				line-height: $appbar-mobile-portrait-height;
				margin: 0 0 $drawer-profile-bottom-padding 0;
				border-bottom: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));

				@media only screen and (orientation: landscape) and (max-width: #{$small-screen}) {
					height: $appbar-mobile-landscape-height;
					line-height: $appbar-mobile-landscape-height;
				}

				@media only screen and (orientation: portrait) and (max-width: #{$xsmall-screen}) {
					height: $appbar-mobile-portrait-height;
					line-height: $appbar-mobile-portrait-height;
				}

				@media #{$small-up} {
					height: $appbar-large-height;
					line-height: $appbar-large-height;
				}

				> * {
					float: left;
				}

				img, .sc-drawer-profile-img {
					@include square($drawer-icon-size);
					margin: 0 (rem-calc(72px) - $drawer-icon-size - $drawer-padding) 0 $gutter;
					@include border-radius(50%);
					border: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));
					top: 50%;
					position: inherit;
					@include transform(translate(0, -50%));
				}

				.sc-drawer-profile-name {
					color: if( $theme == light, '', $white);
				}
			}
		}
	}

	/*&-persistent-mini {
		top: $appbar-small-height;

		// Add extra width for scrollbar TODO somehow fix it
		width: calc( (#{$drawer-padding} * 2) + #{$drawer-icon-size} + #{rem-calc(3px)});

		@media #{$small-up} {
			width: calc( (#{$drawer-padding} * 2) + #{$drawer-icon-size} + #{rem-calc(10px)});
		}

		@media #{$medium-only} {
			top: $appbar-medium-height;
		}

		@media #{$medium-up} {
			top: $appbar-large-height;
		}

		li:first-of-type {
			margin: rem-calc(8px) 0 0 0;
		}

		.sc-divider, .sc-arrow, .sc-drawer-profile-name, .sc-drawer-profile-dropdown, .sc-text {
			display: none;
		}

		.sc-drawer-header {
			height: rem-calc(48px);
			line-height: rem-calc(48px);

			.sc-drawer-profile-img {
				@include square($drawer-icon-size);
				margin: 0 calc(#{rem-calc(72px)} - #{$drawer-icon-size} - #{$drawer-padding}) 0 0;
				@include border-radius(50%);
				border: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));
				top: 50%;
				position: inherit;
				@include transform(translate(0, -50%));
			}
		}

		&.sc-expanded {
			width: 100%;
			top: 0;
			border-right: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));
			z-index: 3;

			.sc-drawer-header {
				position: relative;
				height: $appbar-small-height;
				line-height: $appbar-small-height;
				margin: 0 0 rem-calc(8px) 0;
				border-bottom: rem-calc(1px) solid if($theme == light, rgba($black, .12), rgba($white, .12));

				@media #{$medium-only} {
					height: $appbar-medium-height;
					line-height: $appbar-medium-height;
				}

				@media #{$medium-up} {
					height: $appbar-large-height;
					line-height: $appbar-large-height;
				}

				&:hover {
					background: none;
				}

				> * {
					float: left;
				}
		   }
	   }
	}*/

	@if( in-array( 'temporary', $navigation-drawer ) ) {
		&-temporary {
			top: 0;
			z-index: 3;
			@include material-shadow(16);

			.sc-menu {
				top: $drawer-profile-img + $drawer-padding + ($drawer-profile-content-height / 2);
			}

			header, .sc-drawer-header {
				padding: 0 0 $drawer-profile-bottom-padding 0;
				margin: 0 0 $drawer-profile-bottom-padding 0;
				height: $drawer-profile-height;

				.sc-drawer-profile-background {
					top: 0;
					left: 0;
					width: 100%;
					height: $drawer-profile-height;
				}

				.sc-scrim {
					@include linear-gradient($drawer-profile-scrim);
					bottom: $drawer-profile-bottom-padding;
					content: '';
					left: 0;
					position: absolute;
					right: 0;
					top: 0;
					margin: 0 0 -#{$drawer-profile-bottom-padding} 0;
				}

				.sc-drawer-profile-background, .sc-drawer-profile-img, .sc-drawer-profile-name, .sc-drawer-profile-email, .sc-drawer-profile-more {
					position: absolute;
				}

				.sc-drawer-profile-img {
					top: $drawer-padding;
					left: $drawer-padding;
					@include square($drawer-profile-img);
					@include border-radius(50%);
				}

				.sc-drawer-profile-name, .sc-drawer-profile-email {
					line-height: $drawer-profile-content-height / 2;
					left: $drawer-padding;
					height: $drawer-profile-content-height / 2;
					color: $white;
				}

				.sc-drawer-profile-name {
					top: $drawer-profile-img + $drawer-padding;
					font-size: rem-calc(14px);
					font-weight: 500;
					right: 0;
				}

				.sc-drawer-profile-email {
					top: $drawer-profile-img + $drawer-padding + ($drawer-profile-content-height / 2);
					font-size: rem-calc(14px);
					font-weight: 400;
					right: $drawer-profile-content-height + $drawer-padding;
				}

				.sc-drawer-profile-more {
					height: $drawer-profile-content-height / 2;
					line-height: $drawer-profile-content-height;
					right: $drawer-padding;
					top: $drawer-profile-img + $drawer-padding + ($drawer-profile-content-height / 2);
					text-align: right;
					position: relative;

					.material-icons {
						margin: (($drawer-profile-content-height / 4) * -1) ($gutter * -1) 0 0;
						color: $white;
					}
				}
			}

			&.sc-expanded {
				margin: 0;
			}
		}
	}

	a {
		cursor: pointer;
		color: if( $theme == light, rgba($black, .87), rgba($white, .7));
		font-weight: 500;
		width: 100%;
		display: block;
		height: $drawer-item-height;
		font-size: rem-calc(15px);
		line-height: $drawer-item-height;
		position: relative;
		padding: 0 $drawer-padding;
		@include transition(color $transition-small-duration $basic-transition);

		@media #{$medium-only} {
			@include transition(color $transition-medium-duration $basic-transition);
		}

		@media #{$medium-up} {
			@include transition(color $transition-large-duration $basic-transition);
		}

		&:hover, &.sc-active {
			color: if( $theme == light, $main-color, $white);

			.material-icons {
				color: if( $theme == light, $main-color, $white);
			}

			.sc-arrow {
				color: revert;
			}
		}

		&.sc-no-background {
			background: transparent;

			&:hover {
				background: transparent;
			}
		}
	}

	.sc-subheader {
		color: rgba($black, .54);
	}

	.sc-dropdown {
		visibility: hidden;
		@include opacity(0);
		@include transition(all $transition-small-duration $basic-transition);

		@media #{$medium-only} {
			@include transition(all $transition-medium-duration $basic-transition);
		}

		@media #{$medium-up} {
			@include transition(all $transition-large-duration $basic-transition);
		}

		a {
			font-weight: 400;
			padding: 0 0 0 ($gutter * 2);
		}

		&.sc-expanded {
			visibility: visible;
			@include opacity(1);
		}
	}

	.material-icons {
		@include square($drawer-icon-size);
		font-size: $drawer-icon-size;
		vertical-align: middle;
		color: if( $theme == light, rgba($black, .54), rgba($white, .5) );
		margin: 0 (rem-calc(72px) - $drawer-padding - $drawer-icon-size) 0 0;
		@include transition(color $transition-small-duration $basic-transition);

		@media #{$medium-only} {
			@include transition(color $transition-medium-duration $basic-transition);
		}

		@media #{$medium-up} {
			@include transition(color $transition-large-duration $basic-transition);
		}
	}

	.sc-drawer-dropdown.sc-expanded .sc-arrow {
		@include transform(rotate(180deg));
	}

	.sc-arrow {
		position: absolute;
		right: rem-calc(16px);
		top: ($drawer-item-height - ($drawer-item-height / 2)) - ($drawer-icon-size / 2);
		margin: 0;
		@include transition(all $transition-small-duration $basic-transition);

		@media #{$medium-only} {
			@include transition(all $transition-medium-duration $basic-transition);
		}

		@media #{$medium-up} {
			@include transition(all $transition-large-duration $basic-transition);
		}
	}

	.sc-divider {
		margin: rem-calc(8px) 0;
		height: rem-calc(1px);
		background: if($theme == light, rgba($black, .12), rgba($white, .12));

		&:hover {
			background: none;
		}
	}

	.sc-menu {
		position: fixed;
		z-index: 4;
		left: rem-calc(4px);
	}
}